syntax = "proto3";

package flchain.committee;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "flchain/committee/params.proto";
import "flchain/committee/submission.proto";

option go_package = "flchain/x/committee/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/flchain/committee/params";
  
  }
  
  // Queries a list of GetSubmission items.
  rpc GetSubmission (QueryGetSubmissionRequest) returns (QueryGetSubmissionResponse) {
    option (google.api.http).get = "/flchain/committee/get_submission/{lnodeId}/{round}";
  
  }
  
  // Queries a list of GetScore items.
  rpc GetScore (QueryGetScoreRequest) returns (QueryGetScoreResponse) {
    option (google.api.http).get = "/flchain/committee/get_score/{round}/{cnodeId}/{lnodeId}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// keeper/get_submission.go
message QueryGetSubmissionRequest {
  string lnodeId = 1;
  uint64 round   = 2;
}

message QueryGetSubmissionResponse {
  Submission submission = 1;
}

// keeper/get_score.go
message QueryGetScoreRequest {
  uint64 round   = 1;
  string cnodeId = 2;
  string lnodeId = 3;
}

message QueryGetScoreResponse {
  string scoreJson = 1;
}

